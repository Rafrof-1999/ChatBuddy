{"ast":null,"code":"var _jsxFileName = \"D:\\\\Side Projects\\\\chatapp\\\\frontend\\\\src\\\\components\\\\ChatComponents\\\\SingleChat.js\",\n    _s = $RefreshSig$();\n\nimport { ArrowBackIcon } from '@chakra-ui/icons';\nimport { Box, FormControl, IconButton, Input, Spinner, Text } from '@chakra-ui/react';\nimport React, { useState } from 'react';\nimport { getSender, getSenderInfo } from '../../config/chatConnfig';\nimport { ChatState } from '../../Context/chatProvider';\nimport ProfileModal from '../Modals/Profile';\nimport UpdatedGroupChatModal from '../Modals/UpdatedGroupChatModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SingleChat(_ref) {\n  _s();\n\n  let {\n    fetchAgain,\n    setFetchAgain\n  } = _ref;\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [newMessage, setNewMessage] = useState();\n  const {\n    user,\n    selectedChat,\n    setSelectedChat\n  } = ChatState();\n\n  const sendMessage = () => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: selectedChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: {\n          base: \"28px\",\n          md: \"30px\"\n        },\n        pb: 3,\n        px: 2,\n        w: \"100%\",\n        fontFamily: \"Work sans\",\n        display: \"flex\",\n        justifyContent: {\n          base: \"space-between\"\n        },\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          display: {\n            base: \"flex\",\n            md: \"none\"\n          },\n          icon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this),\n          onClick: () => setSelectedChat(\"\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), !selectedChat.isGroupChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [getSender(user, selectedChat.users), /*#__PURE__*/_jsxDEV(ProfileModal, {\n            user: getSenderInfo(user, selectedChat.users)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [selectedChat.chatName.toUpperCase(), /*#__PURE__*/_jsxDEV(UpdatedGroupChatModal, {\n            fetchAgain: fetchAgain,\n            setFetchAgain: setFetchAgain\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDir: \"column\",\n        justifyContent: \"flex-end\",\n        p: 3,\n        bg: \"#E8E8E8\",\n        w: \"100%\",\n        h: \"100%\",\n        borderRadius: \"lg\",\n        overflowY: \"hidden\",\n        children: [loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n          size: \"xl\",\n          w: 20,\n          h: 20,\n          alignSelf: \"center\",\n          margin: \"auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          onKeyDown: sendMessage,\n          isRequired: true,\n          mt: 3,\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            variant: \"filled\",\n            bg: \"#E0E0E0\",\n            placeholder: \"Enter Message\",\n            onChange: typingHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      h: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"3xl\",\n        pb: 3,\n        fontFamily: \"Work sans\",\n        children: \"Click on a chat to start chatting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(SingleChat, \"0N85zgwirUfXFtKyDN8BnmCskm4=\");\n\n_c = SingleChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleChat\");","map":{"version":3,"names":["ArrowBackIcon","Box","FormControl","IconButton","Input","Spinner","Text","React","useState","getSender","getSenderInfo","ChatState","ProfileModal","UpdatedGroupChatModal","SingleChat","fetchAgain","setFetchAgain","messages","setMessages","loading","setLoading","newMessage","setNewMessage","user","selectedChat","setSelectedChat","sendMessage","base","md","isGroupChat","users","chatName","toUpperCase","typingHandler"],"sources":["D:/Side Projects/chatapp/frontend/src/components/ChatComponents/SingleChat.js"],"sourcesContent":["import { ArrowBackIcon } from '@chakra-ui/icons'\r\nimport { Box, FormControl, IconButton, Input, Spinner, Text } from '@chakra-ui/react'\r\nimport React, { useState } from 'react'\r\nimport { getSender, getSenderInfo } from '../../config/chatConnfig'\r\nimport { ChatState } from '../../Context/chatProvider'\r\nimport ProfileModal from '../Modals/Profile'\r\nimport UpdatedGroupChatModal from '../Modals/UpdatedGroupChatModal'\r\n\r\nexport default function SingleChat({fetchAgain, setFetchAgain}) {\r\n    const [messages, setMessages] = useState([])\r\n    const [loading, setLoading] = useState(false);\r\n    const [newMessage, setNewMessage] = useState();\r\n    const {user, selectedChat, setSelectedChat} = ChatState()\r\n\r\n    const sendMessage = ()=>{\r\n\r\n    }\r\n  return (\r\n    <>\r\n        {selectedChat ? (\r\n            <>\r\n            <Text\r\n            fontSize={{ base: \"28px\", md: \"30px\" }}\r\n            pb={3}\r\n            px={2}\r\n            w=\"100%\"\r\n            fontFamily=\"Work sans\"\r\n            display=\"flex\"\r\n            justifyContent={{ base: \"space-between\" }}\r\n            alignItems=\"center\"\r\n          >\r\n            <IconButton\r\n              display={{ base: \"flex\", md: \"none\" }}\r\n              icon={<ArrowBackIcon />}\r\n              onClick={() => setSelectedChat(\"\")}\r\n            />\r\n            {!selectedChat.isGroupChat ? (\r\n                <>\r\n                {getSender(user, selectedChat.users)}\r\n                <ProfileModal user={getSenderInfo(user, selectedChat.users)}/>\r\n                </>\r\n            ) : (\r\n                <>\r\n                {selectedChat.chatName.toUpperCase()}\r\n                <UpdatedGroupChatModal\r\n                fetchAgain={fetchAgain}\r\n                setFetchAgain={setFetchAgain}\r\n                />\r\n                </>\r\n            )}\r\n            </Text>\r\n\r\n            <Box\r\n            display=\"flex\"\r\n            flexDir=\"column\"\r\n            justifyContent=\"flex-end\"\r\n            p={3}\r\n            bg=\"#E8E8E8\"\r\n            w=\"100%\"\r\n            h=\"100%\"\r\n            borderRadius=\"lg\"\r\n            overflowY=\"hidden\"\r\n            >\r\n              {loading ? (\r\n                <Spinner\r\n                size=\"xl\"\r\n                w={20}\r\n                h={20}\r\n                alignSelf=\"center\"\r\n                margin=\"auto\"\r\n                />\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n\r\n              <FormControl onKeyDown={sendMessage} isRequired mt={3}>\r\n                <Input variant=\"filled\" bg=\"#E0E0E0\" placeholder=\"Enter Message\" onChange={typingHandler}/>\r\n              </FormControl>\r\n            </Box>\r\n            </>\r\n        ) : (\r\n            <Box \r\n            display=\"flex\" alignItems=\"center\" justifyContent=\"center\"\r\n            h=\"100%\">\r\n             <Text fontSize=\"3xl\" pb={3} fontFamily=\"Work sans\">   \r\n                Click on a chat to start chatting\r\n             </Text>\r\n            </Box>\r\n        )}\r\n    </>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}