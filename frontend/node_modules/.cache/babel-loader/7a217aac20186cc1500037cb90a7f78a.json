{"ast":null,"code":"var _jsxFileName = \"D:\\\\Side Projects\\\\chatapp\\\\frontend\\\\src\\\\components\\\\ChatComponents\\\\ChatList.js\",\n    _s = $RefreshSig$();\n\nimport { AddIcon } from '@chakra-ui/icons';\nimport { Box, Button, ButtonGroup, useToast } from '@chakra-ui/react';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { ChatState } from \"../../Context/chatProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatList() {\n  _s();\n\n  const [logged, setLoggedUser] = useState();\n  const {\n    user,\n    selectedChat,\n    setSelectedChat,\n    chats,\n    setChats\n  } = ChatState();\n  const toast = useToast();\n\n  const fetchChats = async () => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.get(\"/api/chats\", config);\n      setChats(data);\n      console.log(data);\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        status: \"Failed to load chats\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-left\"\n      });\n    }\n  };\n\n  useEffect(() => {\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\n    fetchChats();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: {\n      base: selectedChat ? \"none\" : \"flex\",\n      md: \"flex\"\n    },\n    flexDir: \"column\",\n    alignItems: \"center\",\n    p: 3,\n    bg: \"white\",\n    w: {\n      base: \"100%\",\n      md: \"31%\"\n    },\n    borderRadius: \"lg\",\n    borderWidth: \"1px\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      pb: 3,\n      px: 3,\n      fontSize: {\n        base: \"28px\",\n        md: \"30px\"\n      },\n      fontFamily: \"Work sans\",\n      display: \"flex\",\n      w: \"100%\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      children: [\"Chats\", /*#__PURE__*/_jsxDEV(Button, {\n        d: \"flex\",\n        fontSize: {\n          base: \"17px\",\n          md: \"10px\",\n          lg: \"17px\"\n        },\n        rightIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 24\n        }, this),\n        children: \"New Group Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDir: \"column\",\n      p: 3,\n      bg: \"#F8F8F8\",\n      w: \"100%\",\n      h: \"100%\",\n      borderRadius: \"lg\",\n      overflowY: \"hidden\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChatList, \"oCHFuh7rGz2NmsnK18mWXuDCW0E=\", false, function () {\n  return [useToast];\n});\n\n_c = ChatList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatList\");","map":{"version":3,"names":["AddIcon","Box","Button","ButtonGroup","useToast","axios","React","useEffect","useState","ChatState","ChatList","logged","setLoggedUser","user","selectedChat","setSelectedChat","chats","setChats","toast","fetchChats","config","headers","Authorization","token","data","get","console","log","error","title","status","duration","isClosable","position","JSON","parse","localStorage","getItem","base","md","lg"],"sources":["D:/Side Projects/chatapp/frontend/src/components/ChatComponents/ChatList.js"],"sourcesContent":["import { AddIcon } from '@chakra-ui/icons';\r\nimport { Box, Button, ButtonGroup, useToast } from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport {ChatState} from \"../../Context/chatProvider\"\r\nexport default function ChatList() {\r\n  const [logged, setLoggedUser] = useState();\r\n  const {user, selectedChat, setSelectedChat, chats, setChats} = ChatState();\r\n\r\n  const toast = useToast();\r\n  const fetchChats = async() =>{\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`\r\n        }\r\n      }\r\n\r\n      const {data} = await axios.get(\"/api/chats\",config)\r\n      setChats(data);\r\n      console.log(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error\",\r\n        status: \"Failed to load chats\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top-left\"\r\n      })\r\n\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\r\n    fetchChats();\r\n  }, [])\r\n  return (\r\n    <Box\r\n    display={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\r\n    flexDir=\"column\"\r\n    alignItems=\"center\"\r\n    p={3}\r\n    bg=\"white\"\r\n    w={{ base: \"100%\", md: \"31%\" }}\r\n    borderRadius=\"lg\"\r\n    borderWidth=\"1px\"    >\r\n      <Box\r\n        pb={3}\r\n        px={3}\r\n        fontSize={{ base: \"28px\", md: \"30px\" }}\r\n        fontFamily=\"Work sans\"\r\n        display=\"flex\"\r\n        w=\"100%\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"      \r\n        >\r\n         Chats\r\n         <Button\r\n            d=\"flex\"\r\n            fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\r\n            rightIcon={<AddIcon/>}\r\n          >\r\n            New Group Chat\r\n         </Button>\r\n      </Box>\r\n      <Box\r\n        display=\"flex\"\r\n        flexDir=\"column\"\r\n        p={3}\r\n        bg=\"#F8F8F8\"\r\n        w=\"100%\"\r\n        h=\"100%\"\r\n        borderRadius=\"lg\"\r\n        overflowY=\"hidden\"      >\r\n\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,kBAAxB;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,WAAtB,EAAmCC,QAAnC,QAAmD,kBAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAAQC,SAAR,QAAwB,4BAAxB;;AACA,eAAe,SAASC,QAAT,GAAoB;EAAA;;EACjC,MAAM,CAACC,MAAD,EAASC,aAAT,IAA0BJ,QAAQ,EAAxC;EACA,MAAM;IAACK,IAAD;IAAOC,YAAP;IAAqBC,eAArB;IAAsCC,KAAtC;IAA6CC;EAA7C,IAAyDR,SAAS,EAAxE;EAEA,MAAMS,KAAK,GAAGd,QAAQ,EAAtB;;EACA,MAAMe,UAAU,GAAG,YAAU;IAC3B,IAAI;MACF,MAAMC,MAAM,GAAG;QACbC,OAAO,EAAE;UACPC,aAAa,EAAG,UAAST,IAAI,CAACU,KAAM;QAD7B;MADI,CAAf;MAMA,MAAM;QAACC;MAAD,IAAS,MAAMnB,KAAK,CAACoB,GAAN,CAAU,YAAV,EAAuBL,MAAvB,CAArB;MACAH,QAAQ,CAACO,IAAD,CAAR;MACAE,OAAO,CAACC,GAAR,CAAYH,IAAZ;IACD,CAVD,CAUE,OAAOI,KAAP,EAAc;MACdV,KAAK,CAAC;QACJW,KAAK,EAAE,OADH;QAEJC,MAAM,EAAE,sBAFJ;QAGJC,QAAQ,EAAE,IAHN;QAIJC,UAAU,EAAE,IAJR;QAKJC,QAAQ,EAAE;MALN,CAAD,CAAL;IAQD;EACF,CArBD;;EAuBA1B,SAAS,CAAC,MAAI;IACZK,aAAa,CAACsB,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAD,CAAb;IACAlB,UAAU;EACX,CAHQ,EAGN,EAHM,CAAT;EAIA,oBACE,QAAC,GAAD;IACA,OAAO,EAAE;MAAEmB,IAAI,EAAExB,YAAY,GAAG,MAAH,GAAY,MAAhC;MAAwCyB,EAAE,EAAE;IAA5C,CADT;IAEA,OAAO,EAAC,QAFR;IAGA,UAAU,EAAC,QAHX;IAIA,CAAC,EAAE,CAJH;IAKA,EAAE,EAAC,OALH;IAMA,CAAC,EAAE;MAAED,IAAI,EAAE,MAAR;MAAgBC,EAAE,EAAE;IAApB,CANH;IAOA,YAAY,EAAC,IAPb;IAQA,WAAW,EAAC,KARZ;IAAA,wBASE,QAAC,GAAD;MACE,EAAE,EAAE,CADN;MAEE,EAAE,EAAE,CAFN;MAGE,QAAQ,EAAE;QAAED,IAAI,EAAE,MAAR;QAAgBC,EAAE,EAAE;MAApB,CAHZ;MAIE,UAAU,EAAC,WAJb;MAKE,OAAO,EAAC,MALV;MAME,CAAC,EAAC,MANJ;MAOE,cAAc,EAAC,eAPjB;MAQE,UAAU,EAAC,QARb;MAAA,iCAWG,QAAC,MAAD;QACG,CAAC,EAAC,MADL;QAEG,QAAQ,EAAE;UAAED,IAAI,EAAE,MAAR;UAAgBC,EAAE,EAAE,MAApB;UAA4BC,EAAE,EAAE;QAAhC,CAFb;QAGG,SAAS,eAAE,QAAC,OAAD;UAAA;UAAA;UAAA;QAAA,QAHd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAXH;IAAA;MAAA;MAAA;MAAA;IAAA,QATF,eA4BE,QAAC,GAAD;MACE,OAAO,EAAC,MADV;MAEE,OAAO,EAAC,QAFV;MAGE,CAAC,EAAE,CAHL;MAIE,EAAE,EAAC,SAJL;MAKE,CAAC,EAAC,MALJ;MAME,CAAC,EAAC,MANJ;MAOE,YAAY,EAAC,IAPf;MAQE,SAAS,EAAC;IARZ;MAAA;MAAA;MAAA;IAAA,QA5BF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA0CD;;GA1EuB9B,Q;UAIRN,Q;;;KAJQM,Q"},"metadata":{},"sourceType":"module"}