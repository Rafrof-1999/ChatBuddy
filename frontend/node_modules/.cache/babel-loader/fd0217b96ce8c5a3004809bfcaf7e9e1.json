{"ast":null,"code":"var _jsxFileName = \"D:\\\\Side Projects\\\\chatapp\\\\frontend\\\\src\\\\components\\\\Modals\\\\UpdatedGroupChatModal.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { ViewIcon } from \"@chakra-ui/icons\";\nimport { Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton, Button, useDisclosure, FormControl, Input, useToast, Box, IconButton, Spinner } from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { ChatState } from \"../../Context/chatProvider\";\nimport UserBadgeItem from \"../UserAvatar/UserBadgeItem\";\nimport UserListItem from \"../UserAvatar/UserListItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UpdatedGroupChatModal(_ref) {\n  _s();\n\n  let {\n    fetchAgain,\n    setFetchAgain\n  } = _ref;\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [renameloading, setRenameLoading] = useState(false);\n  const toast = useToast();\n  const {\n    selectedChat,\n    setSelectedChat,\n    user\n  } = ChatState();\n\n  const handleRemove = async () => {};\n\n  const handleRename = async () => {\n    if (!groupChatName) return;\n\n    try {\n      setRenameLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.put(\"/api/chats/rename\", {\n        chatId: selectedChat._id,\n        chatName: groupChatName\n      }, config);\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setRenameLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured\",\n        description: error.response.data.message,\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\"\n      });\n      setRenameLoading(false);\n    }\n\n    setGroupChatName(\"\");\n  };\n\n  const handleSearch = async query => {\n    setSearch(query);\n\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.get(`/api/user?search=${search}`, config);\n      console.log(data);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      display: {\n        base: \"flex\"\n      },\n      icon: /*#__PURE__*/_jsxDEV(ViewIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 58\n      }, this),\n      onClick: onOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpen,\n      onClose: onClose,\n      isCentered: true,\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          fontSize: \"35px\",\n          fontFamily: \"Work sans\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          children: selectedChat.chatName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            w: \"100%\",\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            pb: 3,\n            children: selectedChat.users.map(u => /*#__PURE__*/_jsxDEV(UserBadgeItem, {\n              user: u,\n              handleFunction: () => handleRemove(u)\n            }, u._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            display: \"flex\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Chat Name\",\n              mb: 3,\n              value: groupChatName,\n              onChange: e => setGroupChatName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"solid\",\n              colorScheme: \"teal\",\n              ml: 1,\n              isLoading: renameloading,\n              onClick: handleRename,\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Add User to group\",\n              mb: 1,\n              onChange: e => handleSearch(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleRemove(user),\n            colorScheme: \"red\",\n            children: \"Leave Group\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UpdatedGroupChatModal, \"AqlGJFgXOkUwCEzUNk0N4v7uW8c=\", false, function () {\n  return [useDisclosure, useToast];\n});\n\n_c = UpdatedGroupChatModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatedGroupChatModal\");","map":{"version":3,"names":["React","ViewIcon","Modal","ModalOverlay","ModalContent","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","Button","useDisclosure","FormControl","Input","useToast","Box","IconButton","Spinner","axios","useState","ChatState","UserBadgeItem","UserListItem","UpdatedGroupChatModal","fetchAgain","setFetchAgain","isOpen","onOpen","onClose","groupChatName","setGroupChatName","search","setSearch","searchResult","setSearchResult","loading","setLoading","renameloading","setRenameLoading","toast","selectedChat","setSelectedChat","user","handleRemove","handleRename","config","headers","Authorization","token","data","put","chatId","_id","chatName","error","title","description","response","message","status","duration","isClosable","position","handleSearch","query","get","console","log","base","users","map","u","e","target","value"],"sources":["D:/Side Projects/chatapp/frontend/src/components/Modals/UpdatedGroupChatModal.js"],"sourcesContent":["import React from 'react'\r\nimport { ViewIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    Button,\r\n    useDisclosure,\r\n    FormControl,\r\n    Input,\r\n    useToast,\r\n    Box,\r\n    IconButton,\r\n    Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { ChatState } from \"../../Context/chatProvider\";\r\nimport UserBadgeItem from \"../UserAvatar/UserBadgeItem\";\r\nimport UserListItem from \"../UserAvatar/UserListItem\";\r\n\r\nexport default function UpdatedGroupChatModal({ fetchAgain, setFetchAgain }) {\r\n\r\n    const { isOpen, onOpen, onClose } = useDisclosure();\r\n    const [groupChatName, setGroupChatName] = useState();\r\n    const [search, setSearch] = useState(\"\");\r\n    const [searchResult, setSearchResult] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [renameloading, setRenameLoading] = useState(false);\r\n    const toast = useToast();\r\n\r\n    const { selectedChat, setSelectedChat, user } = ChatState();\r\n\r\n    const handleRemove = async() => {\r\n\r\n    }\r\n    const handleRename = async() => {\r\n        if(!groupChatName)\r\n        return;\r\n\r\n        try {\r\n            setRenameLoading(true)\r\n            const config = {\r\n                headers:{\r\n                  Authorization:`Bearer ${user.token}`\r\n                },\r\n              }\r\n\r\n              const {data} = await axios.put(\"/api/chats/rename\",{\r\n                  chatId: selectedChat._id,\r\n                  chatName: groupChatName\r\n              },config)\r\n\r\n              setSelectedChat(data)\r\n              setFetchAgain(!fetchAgain);\r\n              setRenameLoading(false)\r\n     } catch (error) {\r\n        toast({\r\n            title: \"Error Occured\",\r\n            description: error.response.data.message,\r\n            status: \"warning\",\r\n            duration: 5000,\r\n            isClosable: true,\r\n            position: \"bottom\"\r\n          })\r\n            \r\n        setRenameLoading(false)\r\n        }\r\n        setGroupChatName(\"\")\r\n    }\r\n    const handleSearch = async (query) => {\r\n        setSearch(query);\r\n        if (!query) {\r\n          return;\r\n        }\r\n    \r\n        try {\r\n          setLoading(true);\r\n          const config = {\r\n            headers: {\r\n              Authorization: `Bearer ${user.token}`,\r\n            },\r\n          };\r\n          const { data } = await axios.get(`/api/user?search=${search}`, config);\r\n          console.log(data);\r\n          setLoading(false);\r\n          setSearchResult(data);\r\n        } catch (error) {\r\n          toast({\r\n            title: \"Error Occured!\",\r\n            description: \"Failed to Load the Search Results\",\r\n            status: \"error\",\r\n            duration: 5000,\r\n            isClosable: true,\r\n            position: \"bottom-left\",\r\n          });\r\n        }\r\n      };\r\n  \r\n\r\n    return (\r\n        <>\r\n            <IconButton display={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\r\n\r\n            <Modal isOpen={isOpen} onClose={onClose} isCentered>\r\n                <ModalOverlay />\r\n                <ModalContent>\r\n                    <ModalHeader\r\n                        fontSize=\"35px\"\r\n                        fontFamily=\"Work sans\"\r\n                        display=\"flex\"\r\n                        justifyContent=\"center\"\r\n                    >{selectedChat.chatName}</ModalHeader>\r\n                    <ModalCloseButton />\r\n                    <ModalBody>\r\n                        <Box w=\"100%\" display=\"flex\" flexWrap=\"wrap\" pb={3}>\r\n                            {selectedChat.users.map((u) => (\r\n                                <UserBadgeItem\r\n                                    key={u._id}\r\n                                    user={u}\r\n                                    handleFunction={() => handleRemove(u)}\r\n                                />\r\n                            ))}\r\n                        </Box>\r\n                        <FormControl display=\"flex\">\r\n                            <Input\r\n                                placeholder=\"Chat Name\"\r\n                                mb={3}\r\n                                value={groupChatName}\r\n                                onChange={(e) => setGroupChatName(e.target.value)}\r\n                            />\r\n                            <Button\r\n                                variant=\"solid\"\r\n                                colorScheme=\"teal\"\r\n                                ml={1}\r\n                                isLoading={renameloading}\r\n                                onClick={handleRename}\r\n                            >\r\n                                Update\r\n                            </Button>\r\n                        </FormControl>\r\n                        <FormControl>\r\n                            <Input\r\n                                placeholder=\"Add User to group\"\r\n                                mb={1}\r\n                                onChange={(e) => handleSearch(e.target.value)}\r\n                            />\r\n                        </FormControl>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button onClick={() => handleRemove(user)} colorScheme=\"red\">\r\n                            Leave Group\r\n                        </Button>\r\n                    </ModalFooter>\r\n                </ModalContent>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}